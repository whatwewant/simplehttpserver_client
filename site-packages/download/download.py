#!/usr/bin/env python
# coding=utf-8
import urllib2
import platform
import sys
import os
PYTHON_VERSION = platform.python_version()
sys.path.append(os.path.dirname(__file__)+'../../site-packages')

import requests

def download_url(url, absolute_file_name, number=1):
    '''
        download 
    '''
    # file_name = url.split('/')[-1]
    # print url
    file_name = absolute_file_name

    try:
        u = urllib2.urlopen(url)
    except urllib2.HTTPError:
        return

    f = open(file_name, 'wb')
    meta = u.info()
    file_size = 1
    try:
        file_size = int(meta.getheaders("Content-Length")[0])
    except IndexError:
        file_size = int(requests.head(url).headers.get('Content-Length'))

    unit_size = file_size

    unit = 'byte'
    if file_size > 1024 * 1024 * 1024:
        unit = 'GB'
        unit_size /= float(1024 * 1024 * 1024)
    elif file_size > 1024 * 1024:
        unit = 'MB'
        unit_size /= float(1024 * 1024)
    elif file_size > 1024:
        unit = 'KB'
        unit_size /= float(1024)

    print("%s Downloading: %s Bytes: %.2f %s" % (number, file_name.split('/').pop(), unit_size, unit))

    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        # status = r"%10d  [%3.2f%%]" % (file_size_dl, file_size_dl * 100. / file_size)
        status = r"%.2f MB  [%3.2f%%]" % (file_size_dl/float(1024*1024), file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1) 
        
        # print (status,)
        sys.stdout.write(status + '\r')
        sys.stdout.flush()

    f.close()
